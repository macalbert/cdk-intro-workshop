// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Static website Stack Should_CreateWebsite_When_StackIsCalled: staticWebsiteStackTest 1`] = `
{
  "Mappings": {
    "AWSCloudFrontPartitionHostedZoneIdMap": {
      "aws": {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": {
    "CloudFrontDistributionDomainName": {
      "Description": "CloudFront distribution domain",
      "Export": {
        "Name": "test-website-CloudFrontDistributionDomainName",
      },
      "Value": {
        "Fn::GetAtt": [
          "distribution114A0A2A",
          "DomainName",
        ],
      },
    },
    "DnsRecordName": {
      "Description": "The DNS record name",
      "Export": {
        "Name": "test-website-AliasRecord",
      },
      "Value": {
        "Ref": "webDomainRecord45699F3C",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-account-eu-west-1",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "deploystaticwebsiteAwsCliLayer31B11195",
          },
        ],
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.11",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-account-eu-west-1",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-hnb659fds-assets-account-eu-west-1/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staticwebsitebucket7EF1E06C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "staticwebsitebucket7EF1E06C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-account-eu-west-1",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "staticwebsitebucket7EF1E06C",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs22.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "deploystaticwebsiteAwsCliLayer31B11195": {
      "Properties": {
        "Content": {
          "S3Bucket": "cdk-hnb659fds-assets-account-eu-west-1",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "deploystaticwebsiteCustomResource7923FA82": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "staticwebsitebucket7EF1E06C",
        },
        "DistributionId": {
          "Ref": "distribution114A0A2A",
        },
        "DistributionPaths": [
          "/*",
        ],
        "OutputObjectKeys": true,
        "Prune": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          "cdk-hnb659fds-assets-account-eu-west-1",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "distribution114A0A2A": {
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "test.domain.com",
          ],
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 10,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/403.html",
            },
            {
              "ErrorCachingMinTTL": 10,
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/404.html",
            },
          ],
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "FunctionAssociations": [
              {
                "EventType": "viewer-request",
                "FunctionARN": {
                  "Fn::GetAtt": [
                    "testdomaincomurlrewrite603CDF99",
                    "FunctionARN",
                  ],
                },
              },
            ],
            "TargetOriginId": "staticWebsiteStackTestm47testwebsitewebsitetestteststackdistributionOrigin15B768DAE",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "staticwebsitebucket7EF1E06C",
                  "RegionalDomainName",
                ],
              },
              "Id": "staticWebsiteStackTestm47testwebsitewebsitetestteststackdistributionOrigin15B768DAE",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "originAccessIdentity402DAA30",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": "arn:aws:acm:us-east-1:account:certificate/some-guid",
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Test",
          },
          {
            "Key": "Project",
            "Value": "test-website",
          },
          {
            "Key": "StackId",
            "Value": "m47-test-website-websitetest-test-stack",
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "originAccessIdentity402DAA30": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Setup access from CloudFront to the bucket test.domain.com (read)",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "staticwebsitebucket7EF1E06C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccessControl": "Private",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": "test.domain.com",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*",
              ],
              "AllowedMethods": [
                "GET",
                "HEAD",
              ],
              "AllowedOrigins": [
                "*",
              ],
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:a654e0c3",
            "Value": "true",
          },
          {
            "Key": "Environment",
            "Value": "Test",
          },
          {
            "Key": "Project",
            "Value": "test-website",
          },
          {
            "Key": "StackId",
            "Value": "m47-test-website-websitetest-test-stack",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "staticwebsitebucketAutoDeleteObjectsCustomResource4931B7FC": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "staticwebsitebucketPolicy34945549",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "staticwebsitebucket7EF1E06C",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "staticwebsitebucketPolicy34945549": {
      "Properties": {
        "Bucket": {
          "Ref": "staticwebsitebucket7EF1E06C",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staticwebsitebucket7EF1E06C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "staticwebsitebucket7EF1E06C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staticwebsitebucket7EF1E06C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "staticwebsitebucket7EF1E06C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "originAccessIdentity402DAA30",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "staticwebsitebucket7EF1E06C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "staticwebsitebucket7EF1E06C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "originAccessIdentity402DAA30",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "staticwebsitebucket7EF1E06C",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "testdomaincomurlrewrite603CDF99": {
      "Properties": {
        "AutoPublish": true,
        "FunctionCode": "
                  function handler(event) {
                    var request = event.request;
                    var uri = request.uri;
                    var staticFileExtensions = ['.html', '.js', '.css', '.png', '.jpg', '.jpeg', '.gif', '.svg', '.ico', '.woff', '.woff2', '.ttf', '.otf', '.eot', '.json', '.xml'];
                    function hasKnownExtension(uri) {
                      return staticFileExtensions.some(extension => uri.endsWith(extension));
                    }
                    // Remove trailing slash if it's not the homepage
                    if (uri.endsWith('/') && uri !== '/') {
                      uri = uri.slice(0, -1);
                    }
                    // Append .html if the URI does not represent the homepage or a static file
                    if (uri !== '/' && !hasKnownExtension(uri)) {
                      uri += '.html';
                    }
                    request.uri = uri;
                    return request;
                  }
                ",
        "FunctionConfig": {
          "Comment": "eu-west-1test-web-apptestncom-url-rewrite979D13F7",
          "Runtime": "cloudfront-js-1.0",
        },
        "Name": "eu-west-1test-web-apptestncom-url-rewrite979D13F7",
      },
      "Type": "AWS::CloudFront::Function",
    },
    "webDomainRecord45699F3C": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "distribution114A0A2A",
              "DomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::FindInMap": [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "123456789",
        "Name": "test.domain.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
