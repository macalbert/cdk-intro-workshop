// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PipelineStack Should_CreatePipelineStack_When_StackIsCalled: pipelineStackTest 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "PipelineC660917D": {
      "DependsOn": [
        "RolepipelineDefaultPolicyB1AF7048",
        "Rolepipeline86313131",
      ],
      "Properties": {
        "ArtifactStore": {
          "Location": "workshop-codepipeline-artifact",
          "Type": "S3",
        },
        "Name": "m47-test",
        "PipelineType": "V2",
        "RoleArn": {
          "Fn::GetAtt": [
            "Rolepipeline86313131",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1",
                },
                "Configuration": {
                  "Branch": "main",
                  "OAuthToken": "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-west-1:account:secret:github-token:SecretString:::}}",
                  "Owner": "workshop",
                  "PollForSourceChanges": false,
                  "Repo": "m47",
                },
                "Name": "checkout-test-m47",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_checkout-test-m47",
                  },
                ],
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "Testtestpipeline165C0FB1",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_checkout-test-m47",
                  },
                ],
                "Name": "test-pipeline-test-m47",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Roletest8FE49675",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Test",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "buildpipelineF72EB33D",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_checkout-test-m47",
                  },
                ],
                "Name": "build-pipeline-deploy-m47",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Roledeploy92E6FB77",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Deploy",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "PipelineSourcecheckouttestm47WebhookResourceDAC6591C": {
      "Properties": {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": {
          "SecretToken": "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-west-1:account:secret:github-token:SecretString:::}}",
        },
        "Filters": [
          {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}",
          },
        ],
        "RegisterWithThirdParty": true,
        "TargetAction": "checkout-test-m47",
        "TargetPipeline": {
          "Ref": "PipelineC660917D",
        },
        "TargetPipelineVersion": 1,
      },
      "Type": "AWS::CodePipeline::Webhook",
    },
    "Roledeploy92E6FB77": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "Rolepipeline86313131",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for CD pipeline in repo m47 (Test)",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::account:role/*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:eu-west-1:account:log-group:*",
                },
                {
                  "Action": [
                    "codebuild:BatchPutCodeCoverages",
                    "codebuild:BatchPutTestCases",
                    "codebuild:CreateReport",
                    "codebuild:CreateReportGroup",
                    "codebuild:UpdateReport",
                    "codebuild:StartBuild",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:codebuild:eu-west-1:account:project/*",
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*",
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "arn:aws:ses:eu-west-1:account:identity/m47-test",
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:kms:eu-west-1:account:*",
                },
                {
                  "Action": "sqs:*",
                  "Effect": "Allow",
                  "Resource": "arn:aws:sqs:eu-west-1:account:*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:ssm:eu-west-1:account:parameter/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customApiPolicyDocument",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RoledeployDefaultPolicy3EF570DF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "buildpipelineF72EB33D",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "buildpipelineF72EB33D",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:account:report-group/",
                    {
                      "Ref": "buildpipelineF72EB33D",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildpipelineF72EB33D",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RoledeployDefaultPolicy3EF570DF",
        "Roles": [
          {
            "Ref": "Roledeploy92E6FB77",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Rolepipeline86313131": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for CD pipeline in repo m47 (Test)",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::account:role/*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:eu-west-1:account:log-group:*",
                },
                {
                  "Action": [
                    "codebuild:BatchPutCodeCoverages",
                    "codebuild:BatchPutTestCases",
                    "codebuild:CreateReport",
                    "codebuild:CreateReportGroup",
                    "codebuild:UpdateReport",
                    "codebuild:StartBuild",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:codebuild:eu-west-1:account:project/*",
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*",
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "arn:aws:ses:eu-west-1:account:identity/m47-test",
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:kms:eu-west-1:account:*",
                },
                {
                  "Action": "sqs:*",
                  "Effect": "Allow",
                  "Resource": "arn:aws:sqs:eu-west-1:account:*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:ssm:eu-west-1:account:parameter/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customApiPolicyDocument",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RolepipelineDefaultPolicyB1AF7048": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Roletest8FE49675",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Roledeploy92E6FB77",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RolepipelineDefaultPolicyB1AF7048",
        "Roles": [
          {
            "Ref": "Rolepipeline86313131",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Roletest8FE49675": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "Rolepipeline86313131",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for CD pipeline in repo m47 (Test)",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::account:role/*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:eu-west-1:account:log-group:*",
                },
                {
                  "Action": [
                    "codebuild:BatchPutCodeCoverages",
                    "codebuild:BatchPutTestCases",
                    "codebuild:CreateReport",
                    "codebuild:CreateReportGroup",
                    "codebuild:UpdateReport",
                    "codebuild:StartBuild",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:codebuild:eu-west-1:account:project/*",
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*",
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "arn:aws:ses:eu-west-1:account:identity/m47-test",
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:kms:eu-west-1:account:*",
                },
                {
                  "Action": "sqs:*",
                  "Effect": "Allow",
                  "Resource": "arn:aws:sqs:eu-west-1:account:*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:ssm:eu-west-1:account:parameter/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customApiPolicyDocument",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RoletestDefaultPolicy62D11870": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": {
                "StringEquals": {
                  "ec2:AuthorizedService": "codebuild.amazonaws.com",
                  "ec2:Subnet": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "pipelineStackTest:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "pipelineStackTest:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "pipelineStackTest:ExportsOutputRefvpcPrivateSubnet3Subnet985AC459F9514491",
                          },
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":network-interface/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "Testtestpipeline165C0FB1",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "Testtestpipeline165C0FB1",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:account:report-group/",
                    {
                      "Ref": "Testtestpipeline165C0FB1",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Testtestpipeline165C0FB1",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RoletestDefaultPolicy62D11870",
        "Roles": [
          {
            "Ref": "Roletest8FE49675",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Testtestpipeline165C0FB1": {
      "DependsOn": [
        "TesttestpipelinePolicyDocument696CEEF8",
      ],
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "test-pipeline-test-m47",
        "ServiceRole": {
          "Fn::GetAtt": [
            "Roletest8FE49675",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "path/test-pipeline.yml",
          "Type": "CODEPIPELINE",
        },
        "TimeoutInMinutes": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "TesttestpipelineSecurityGroup0D35C015",
                "GroupId",
              ],
            },
          ],
          "Subnets": [
            {
              "Fn::ImportValue": "pipelineStackTest:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271",
            },
            {
              "Fn::ImportValue": "pipelineStackTest:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE",
            },
            {
              "Fn::ImportValue": "pipelineStackTest:ExportsOutputRefvpcPrivateSubnet3Subnet985AC459F9514491",
            },
          ],
          "VpcId": {
            "Fn::ImportValue": "pipelineStackTest:ExportsOutputRefvpcA2121C384D1B3CDE",
          },
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "TesttestpipelinePolicyDocument696CEEF8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TesttestpipelinePolicyDocument696CEEF8",
        "Roles": [
          {
            "Ref": "Roletest8FE49675",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TesttestpipelineSecurityGroup0D35C015": {
      "Properties": {
        "GroupDescription": "Automatic generated security group for CodeBuild pipelineStackTestm47m47frontendpipelinestackteststackTesttestpipeline73ADF735",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "pipelineStackTest:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "buildpipelineF72EB33D": {
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name": "SOME_KEY",
              "Type": "PLAINTEXT",
              "Value": "https://some-url-for-test",
            },
            {
              "Name": "ASPNETCORE_ENVIRONMENT",
              "Type": "PLAINTEXT",
              "Value": "Test",
            },
          ],
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "build-pipeline-deploy-m47",
        "ServiceRole": {
          "Fn::GetAtt": [
            "Roledeploy92E6FB77",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "path/build-pipeline.yml",
          "Type": "CODEPIPELINE",
        },
        "TimeoutInMinutes": 60,
      },
      "Type": "AWS::CodeBuild::Project",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PipelineStack Should_CreatePipelineWithFilteredPathsStack_When_StackIsCalled: pipelineWithFilterStackTest 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "PipelineC660917D": {
      "DependsOn": [
        "RolepipelineDefaultPolicyB1AF7048",
        "Rolepipeline86313131",
      ],
      "Properties": {
        "ArtifactStore": {
          "Location": "workshop-codepipeline-artifact",
          "Type": "S3",
        },
        "Name": "m47-production",
        "PipelineType": "V2",
        "RoleArn": {
          "Fn::GetAtt": [
            "Rolepipeline86313131",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1",
                },
                "Configuration": {
                  "Branch": "main",
                  "OAuthToken": "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-west-1:account:secret:github-token:SecretString:::}}",
                  "Owner": "workshop",
                  "PollForSourceChanges": false,
                  "Repo": "m47",
                },
                "Name": "checkout-production-m47",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_checkout-production-m47",
                  },
                ],
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "Testtestpipeline165C0FB1",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_checkout-production-m47",
                  },
                ],
                "Name": "test-pipeline-test-m47",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Roletest8FE49675",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Test",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "buildpipelineF72EB33D",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_checkout-production-m47",
                  },
                ],
                "Name": "build-pipeline-deploy-m47",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Roledeploy92E6FB77",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Deploy",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "PipelineSourcecheckoutproductionm47WebhookResource6662730C": {
      "Properties": {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": {
          "SecretToken": "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-west-1:account:secret:github-token:SecretString:::}}",
        },
        "Filters": [
          {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}",
          },
        ],
        "RegisterWithThirdParty": true,
        "TargetAction": "checkout-production-m47",
        "TargetPipeline": {
          "Ref": "PipelineC660917D",
        },
        "TargetPipelineVersion": 1,
      },
      "Type": "AWS::CodePipeline::Webhook",
    },
    "Roledeploy92E6FB77": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "Rolepipeline86313131",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for CD pipeline in repo m47 (Production)",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::account:role/*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:eu-west-1:account:log-group:*",
                },
                {
                  "Action": [
                    "codebuild:BatchPutCodeCoverages",
                    "codebuild:BatchPutTestCases",
                    "codebuild:CreateReport",
                    "codebuild:CreateReportGroup",
                    "codebuild:UpdateReport",
                    "codebuild:StartBuild",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:codebuild:eu-west-1:account:project/*",
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*",
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "arn:aws:ses:eu-west-1:account:identity/m47-test",
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:kms:eu-west-1:account:*",
                },
                {
                  "Action": "sqs:*",
                  "Effect": "Allow",
                  "Resource": "arn:aws:sqs:eu-west-1:account:*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:ssm:eu-west-1:account:parameter/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customApiPolicyDocument",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RoledeployDefaultPolicy3EF570DF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "buildpipelineF72EB33D",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "buildpipelineF72EB33D",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:account:report-group/",
                    {
                      "Ref": "buildpipelineF72EB33D",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildpipelineF72EB33D",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RoledeployDefaultPolicy3EF570DF",
        "Roles": [
          {
            "Ref": "Roledeploy92E6FB77",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Rolepipeline86313131": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for CD pipeline in repo m47 (Production)",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::account:role/*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:eu-west-1:account:log-group:*",
                },
                {
                  "Action": [
                    "codebuild:BatchPutCodeCoverages",
                    "codebuild:BatchPutTestCases",
                    "codebuild:CreateReport",
                    "codebuild:CreateReportGroup",
                    "codebuild:UpdateReport",
                    "codebuild:StartBuild",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:codebuild:eu-west-1:account:project/*",
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*",
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "arn:aws:ses:eu-west-1:account:identity/m47-test",
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:kms:eu-west-1:account:*",
                },
                {
                  "Action": "sqs:*",
                  "Effect": "Allow",
                  "Resource": "arn:aws:sqs:eu-west-1:account:*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:ssm:eu-west-1:account:parameter/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customApiPolicyDocument",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RolepipelineDefaultPolicyB1AF7048": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Roletest8FE49675",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Roledeploy92E6FB77",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RolepipelineDefaultPolicyB1AF7048",
        "Roles": [
          {
            "Ref": "Rolepipeline86313131",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Roletest8FE49675": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "Rolepipeline86313131",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for CD pipeline in repo m47 (Production)",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::account:role/*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:eu-west-1:account:log-group:*",
                },
                {
                  "Action": [
                    "codebuild:BatchPutCodeCoverages",
                    "codebuild:BatchPutTestCases",
                    "codebuild:CreateReport",
                    "codebuild:CreateReportGroup",
                    "codebuild:UpdateReport",
                    "codebuild:StartBuild",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:codebuild:eu-west-1:account:project/*",
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*",
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "arn:aws:ses:eu-west-1:account:identity/m47-test",
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:kms:eu-west-1:account:*",
                },
                {
                  "Action": "sqs:*",
                  "Effect": "Allow",
                  "Resource": "arn:aws:sqs:eu-west-1:account:*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:ssm:eu-west-1:account:parameter/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customApiPolicyDocument",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RoletestDefaultPolicy62D11870": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": {
                "StringEquals": {
                  "ec2:AuthorizedService": "codebuild.amazonaws.com",
                  "ec2:Subnet": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet3Subnet985AC459F9514491",
                          },
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":network-interface/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "Testtestpipeline165C0FB1",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "Testtestpipeline165C0FB1",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:account:report-group/",
                    {
                      "Ref": "Testtestpipeline165C0FB1",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Testtestpipeline165C0FB1",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RoletestDefaultPolicy62D11870",
        "Roles": [
          {
            "Ref": "Roletest8FE49675",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Testtestpipeline165C0FB1": {
      "DependsOn": [
        "TesttestpipelinePolicyDocument696CEEF8",
      ],
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "test-pipeline-test-m47",
        "ServiceRole": {
          "Fn::GetAtt": [
            "Roletest8FE49675",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "path/test-pipeline.yml",
          "Type": "CODEPIPELINE",
        },
        "TimeoutInMinutes": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "TesttestpipelineSecurityGroup0D35C015",
                "GroupId",
              ],
            },
          ],
          "Subnets": [
            {
              "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271",
            },
            {
              "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE",
            },
            {
              "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet3Subnet985AC459F9514491",
            },
          ],
          "VpcId": {
            "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcA2121C384D1B3CDE",
          },
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "TesttestpipelinePolicyDocument696CEEF8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TesttestpipelinePolicyDocument696CEEF8",
        "Roles": [
          {
            "Ref": "Roletest8FE49675",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TesttestpipelineSecurityGroup0D35C015": {
      "Properties": {
        "GroupDescription": "Automatic generated security group for CodeBuild pipelineWithFilterStackTestm47m47frontendpipelinestackproductionstackTesttestpipelineA9E6B3DF",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "buildpipelineF72EB33D": {
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name": "SOME_KEY",
              "Type": "PLAINTEXT",
              "Value": "https://some-url-for-test",
            },
            {
              "Name": "ASPNETCORE_ENVIRONMENT",
              "Type": "PLAINTEXT",
              "Value": "Production",
            },
          ],
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "build-pipeline-deploy-m47",
        "ServiceRole": {
          "Fn::GetAtt": [
            "Roledeploy92E6FB77",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "path/build-pipeline.yml",
          "Type": "CODEPIPELINE",
        },
        "TimeoutInMinutes": 60,
      },
      "Type": "AWS::CodeBuild::Project",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`PipelineStack Should_CreatePipelineWithManualApproval_When_StackIsCalled: pipelineWithManualApproval 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "PipelineC660917D": {
      "DependsOn": [
        "RolepipelineDefaultPolicyB1AF7048",
        "Rolepipeline86313131",
      ],
      "Properties": {
        "ArtifactStore": {
          "Location": "workshop-codepipeline-artifact",
          "Type": "S3",
        },
        "Name": "m47-test",
        "PipelineType": "V2",
        "RoleArn": {
          "Fn::GetAtt": [
            "Rolepipeline86313131",
            "Arn",
          ],
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1",
                },
                "Configuration": {
                  "Branch": "main",
                  "OAuthToken": "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-west-1:account:secret:github-token:SecretString:::}}",
                  "Owner": "workshop",
                  "PollForSourceChanges": false,
                  "Repo": "m47",
                },
                "Name": "checkout-test-m47",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_checkout-test-m47",
                  },
                ],
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Name": "m47-manualapproval-test",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Rolepipeline86313131",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "m47-manualapproval-test",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "Testtestpipeline165C0FB1",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_checkout-test-m47",
                  },
                ],
                "Name": "test-pipeline-test-m47",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Roletest8FE49675",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Test",
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "buildpipelineF72EB33D",
                  },
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_checkout-test-m47",
                  },
                ],
                "Name": "build-pipeline-deploy-m47",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Roledeploy92E6FB77",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Deploy",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "PipelineSourcecheckouttestm47WebhookResourceDAC6591C": {
      "Properties": {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": {
          "SecretToken": "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-west-1:account:secret:github-token:SecretString:::}}",
        },
        "Filters": [
          {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}",
          },
        ],
        "RegisterWithThirdParty": true,
        "TargetAction": "checkout-test-m47",
        "TargetPipeline": {
          "Ref": "PipelineC660917D",
        },
        "TargetPipelineVersion": 1,
      },
      "Type": "AWS::CodePipeline::Webhook",
    },
    "Roledeploy92E6FB77": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "Rolepipeline86313131",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for CD pipeline in repo m47 (Test)",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::account:role/*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:eu-west-1:account:log-group:*",
                },
                {
                  "Action": [
                    "codebuild:BatchPutCodeCoverages",
                    "codebuild:BatchPutTestCases",
                    "codebuild:CreateReport",
                    "codebuild:CreateReportGroup",
                    "codebuild:UpdateReport",
                    "codebuild:StartBuild",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:codebuild:eu-west-1:account:project/*",
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*",
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "arn:aws:ses:eu-west-1:account:identity/m47-test",
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:kms:eu-west-1:account:*",
                },
                {
                  "Action": "sqs:*",
                  "Effect": "Allow",
                  "Resource": "arn:aws:sqs:eu-west-1:account:*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:ssm:eu-west-1:account:parameter/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customApiPolicyDocument",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RoledeployDefaultPolicy3EF570DF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "buildpipelineF72EB33D",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "buildpipelineF72EB33D",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:account:report-group/",
                    {
                      "Ref": "buildpipelineF72EB33D",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "buildpipelineF72EB33D",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RoledeployDefaultPolicy3EF570DF",
        "Roles": [
          {
            "Ref": "Roledeploy92E6FB77",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Rolepipeline86313131": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for CD pipeline in repo m47 (Test)",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::account:role/*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:eu-west-1:account:log-group:*",
                },
                {
                  "Action": [
                    "codebuild:BatchPutCodeCoverages",
                    "codebuild:BatchPutTestCases",
                    "codebuild:CreateReport",
                    "codebuild:CreateReportGroup",
                    "codebuild:UpdateReport",
                    "codebuild:StartBuild",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:codebuild:eu-west-1:account:project/*",
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*",
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "arn:aws:ses:eu-west-1:account:identity/m47-test",
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:kms:eu-west-1:account:*",
                },
                {
                  "Action": "sqs:*",
                  "Effect": "Allow",
                  "Resource": "arn:aws:sqs:eu-west-1:account:*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:ssm:eu-west-1:account:parameter/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customApiPolicyDocument",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RolepipelineDefaultPolicyB1AF7048": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Rolepipeline86313131",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Roletest8FE49675",
                  "Arn",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Roledeploy92E6FB77",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RolepipelineDefaultPolicyB1AF7048",
        "Roles": [
          {
            "Ref": "Rolepipeline86313131",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Roletest8FE49675": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "Rolepipeline86313131",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role for CD pipeline in repo m47 (Test)",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": "arn:aws:iam::account:role/*",
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:eu-west-1:account:log-group:*",
                },
                {
                  "Action": [
                    "codebuild:BatchPutCodeCoverages",
                    "codebuild:BatchPutTestCases",
                    "codebuild:CreateReport",
                    "codebuild:CreateReportGroup",
                    "codebuild:UpdateReport",
                    "codebuild:StartBuild",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:codebuild:eu-west-1:account:project/*",
                },
                {
                  "Action": [
                    "s3:GetBucket*",
                    "s3:GetObject*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*",
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                {
                  "Action": "ses:SendEmail",
                  "Effect": "Allow",
                  "Resource": "arn:aws:ses:eu-west-1:account:identity/m47-test",
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKey*",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:kms:eu-west-1:account:*",
                },
                {
                  "Action": "sqs:*",
                  "Effect": "Allow",
                  "Resource": "arn:aws:sqs:eu-west-1:account:*",
                },
                {
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:ssm:eu-west-1:account:parameter/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "customApiPolicyDocument",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RoletestDefaultPolicy62D11870": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ec2:CreateNetworkInterfacePermission",
              "Condition": {
                "StringEquals": {
                  "ec2:AuthorizedService": "codebuild.amazonaws.com",
                  "ec2:Subnet": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":subnet/",
                          {
                            "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet3Subnet985AC459F9514491",
                          },
                        ],
                      ],
                    },
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":network-interface/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "Testtestpipeline165C0FB1",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:eu-west-1:account:log-group:/aws/codebuild/",
                      {
                        "Ref": "Testtestpipeline165C0FB1",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:eu-west-1:account:report-group/",
                    {
                      "Ref": "Testtestpipeline165C0FB1",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Testtestpipeline165C0FB1",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::workshop-codepipeline-artifact/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RoletestDefaultPolicy62D11870",
        "Roles": [
          {
            "Ref": "Roletest8FE49675",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Testtestpipeline165C0FB1": {
      "DependsOn": [
        "TesttestpipelinePolicyDocument696CEEF8",
      ],
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "test-pipeline-test-m47",
        "ServiceRole": {
          "Fn::GetAtt": [
            "Roletest8FE49675",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "path/test-pipeline.yml",
          "Type": "CODEPIPELINE",
        },
        "TimeoutInMinutes": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "TesttestpipelineSecurityGroup0D35C015",
                "GroupId",
              ],
            },
          ],
          "Subnets": [
            {
              "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271",
            },
            {
              "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE",
            },
            {
              "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcPrivateSubnet3Subnet985AC459F9514491",
            },
          ],
          "VpcId": {
            "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcA2121C384D1B3CDE",
          },
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "TesttestpipelinePolicyDocument696CEEF8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TesttestpipelinePolicyDocument696CEEF8",
        "Roles": [
          {
            "Ref": "Roletest8FE49675",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TesttestpipelineSecurityGroup0D35C015": {
      "Properties": {
        "GroupDescription": "Automatic generated security group for CodeBuild pipelineWithFilterStackTestm47m47frontendpipelinestackteststackTesttestpipeline930DDFCA",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "pipelineWithFilterStackTest:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "buildpipelineF72EB33D": {
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name": "SOME_KEY",
              "Type": "PLAINTEXT",
              "Value": "https://some-url-for-test",
            },
            {
              "Name": "ASPNETCORE_ENVIRONMENT",
              "Type": "PLAINTEXT",
              "Value": "Test",
            },
          ],
          "Image": "aws/codebuild/standard:7.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "build-pipeline-deploy-m47",
        "ServiceRole": {
          "Fn::GetAtt": [
            "Roledeploy92E6FB77",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "path/build-pipeline.yml",
          "Type": "CODEPIPELINE",
        },
        "TimeoutInMinutes": 60,
      },
      "Type": "AWS::CodeBuild::Project",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
