// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Test Stack Should_CreateCoreBackendStack_When_BuildIsCalled: backend_githubrepo-ApiGateway 1`] = `
{
  "Outputs": {
    "LambdaRestApigithubrepoApiGatewayEndpoint3C0F2A50": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
            },
            ".execute-api.eu-west-1.",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "LambdaRestApigithubrepoApiGatewayDeploymentStageprodD02D8C0D",
            },
            "/",
          ],
        ],
      },
    },
    "apiUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
            },
            ".execute-api.eu-west-1.",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "LambdaRestApigithubrepoApiGatewayDeploymentStageprodD02D8C0D",
            },
            "/",
          ],
        ],
      },
    },
    "recordUrl": {
      "Value": "https://api-cdk-workshop.m47.io",
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ARecordgithubrepoApiGateway3338BBFA": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "LambdaRestApigithubrepoApiGatewayCustomDomain01659FF5",
              "DistributionDomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "LambdaRestApigithubrepoApiGatewayCustomDomain01659FF5",
              "DistributionHostedZoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "api-cdk-workshop.m47.io.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "ApiGatewayAccessLogsFB871B4C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 365,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiGatewayErrorAlarmgithubrepoApiGateway1C20A84E": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "ApiGatewayErrorTopicE8B30FAC",
          },
        ],
        "AlarmDescription": "API Gateway Error Alarm",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": "LambdaRestApi-githubrepo-ApiGateway",
          },
          {
            "Name": "Stage",
            "Value": {
              "Ref": "LambdaRestApigithubrepoApiGatewayDeploymentStageprodD02D8C0D",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "5XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ApiGatewayErrorTopicE8B30FAC": {
      "Properties": {
        "DisplayName": "API Gateway Error Topic",
      },
      "Type": "AWS::SNS::Topic",
    },
    "LambdaFunctionErrorAlarmgithubrepoApiGatewayFF35C18A": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "ApiGatewayErrorTopicE8B30FAC",
          },
        ],
        "AlarmDescription": "Lambda Function Error Alarm",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Fn::ImportValue": "githubrepo-ApiLambda:ExportsOutputRefDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CA42F3C38",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "LambdaRestApigithubrepoApiGatewayANY7326072A": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::ImportValue": "githubrepo-ApiLambda:ExportsOutputFnGetAttDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CArn4B7B91D4",
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "LambdaRestApigithubrepoApiGatewayD89FA79D",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "LambdaRestApigithubrepoApiGatewayANYApiPermissionTestbackendm47githubrepoapigatewayproductionstackLambdaRestApigithubrepoApiGateway184D4E3BANYDC111A5C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::ImportValue": "githubrepo-ApiLambda:ExportsOutputFnGetAttDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CArn4B7B91D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:account-id:",
              {
                "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaRestApigithubrepoApiGatewayANYApiPermissionbackendm47githubrepoapigatewayproductionstackLambdaRestApigithubrepoApiGateway184D4E3BANY34C1DD0C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::ImportValue": "githubrepo-ApiLambda:ExportsOutputFnGetAttDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CArn4B7B91D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:account-id:",
              {
                "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
              },
              "/",
              {
                "Ref": "LambdaRestApigithubrepoApiGatewayDeploymentStageprodD02D8C0D",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaRestApigithubrepoApiGatewayAccount56B9EAFF": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "LambdaRestApigithubrepoApiGatewayD89FA79D",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "LambdaRestApigithubrepoApiGatewayCloudWatchRole590F30F9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "LambdaRestApigithubrepoApiGatewayCloudWatchRole590F30F9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Production",
          },
          {
            "Key": "Project",
            "Value": "githubrepo",
          },
          {
            "Key": "StackId",
            "Value": "m47-githubrepo-apigateway-production-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "LambdaRestApigithubrepoApiGatewayCustomDomain01659FF5": {
      "Properties": {
        "CertificateArn": "arn:aws:acm:us-east-1:account-id:certificate/ccf470a3-5470-4e2b-8880-19be90782a08",
        "DomainName": "api-cdk-workshop.m47.io",
        "EndpointConfiguration": {
          "Types": [
            "EDGE",
          ],
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Production",
          },
          {
            "Key": "Project",
            "Value": "githubrepo",
          },
          {
            "Key": "StackId",
            "Value": "m47-githubrepo-apigateway-production-stack",
          },
        ],
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "LambdaRestApigithubrepoApiGatewayCustomDomainMapbackendm47githubrepoapigatewayproductionstackLambdaRestApigithubrepoApiGateway184D4E3BC5BDE59E": {
      "Properties": {
        "DomainName": {
          "Ref": "LambdaRestApigithubrepoApiGatewayCustomDomain01659FF5",
        },
        "RestApiId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
        },
        "Stage": {
          "Ref": "LambdaRestApigithubrepoApiGatewayDeploymentStageprodD02D8C0D",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "LambdaRestApigithubrepoApiGatewayD89FA79D": {
      "Properties": {
        "BinaryMediaTypes": [
          "multipart/form-data",
        ],
        "Name": "LambdaRestApi-githubrepo-ApiGateway",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Production",
          },
          {
            "Key": "Project",
            "Value": "githubrepo",
          },
          {
            "Key": "StackId",
            "Value": "m47-githubrepo-apigateway-production-stack",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "LambdaRestApigithubrepoApiGatewayDeployment03585E72ac041712996d6c7225b4d0761f363c06": {
      "DependsOn": [
        "LambdaRestApigithubrepoApiGatewayproxyANY83399373",
        "LambdaRestApigithubrepoApiGatewayproxyOPTIONS911D8093",
        "LambdaRestApigithubrepoApiGatewayproxy16F6DC02",
        "LambdaRestApigithubrepoApiGatewayANY7326072A",
        "LambdaRestApigithubrepoApiGatewayOPTIONSDAD8DE58",
      ],
      "Metadata": {
        "aws:cdk:do-not-refactor": true,
      },
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "LambdaRestApigithubrepoApiGatewayDeploymentStageprodD02D8C0D": {
      "DependsOn": [
        "LambdaRestApigithubrepoApiGatewayAccount56B9EAFF",
      ],
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "ApiGatewayAccessLogsFB871B4C",
              "Arn",
            ],
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] "$context.httpMethod $context.resourcePath $context.protocol" $context.status $context.responseLength $context.requestId",
        },
        "DeploymentId": {
          "Ref": undefined,
        },
        "RestApiId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
        },
        "StageName": "prod",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Production",
          },
          {
            "Key": "Project",
            "Value": "githubrepo",
          },
          {
            "Key": "StackId",
            "Value": "m47-githubrepo-apigateway-production-stack",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LambdaRestApigithubrepoApiGatewayOPTIONSDAD8DE58": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Cache-Control,Content-Language,Content-Type,Expires,Last-Modified,Pragma,Acceptencoding,Authorization,X-Amz-Date,X-Api-Key,X-Forwarded-For'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "LambdaRestApigithubrepoApiGatewayD89FA79D",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "LambdaRestApigithubrepoApiGatewayproxy16F6DC02": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "LambdaRestApigithubrepoApiGatewayD89FA79D",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "LambdaRestApigithubrepoApiGatewayproxyANY83399373": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::ImportValue": "githubrepo-ApiLambda:ExportsOutputFnGetAttDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CArn4B7B91D4",
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayproxy16F6DC02",
        },
        "RestApiId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "LambdaRestApigithubrepoApiGatewayproxyANYApiPermissionTestbackendm47githubrepoapigatewayproductionstackLambdaRestApigithubrepoApiGateway184D4E3BANYproxy3D2593D4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::ImportValue": "githubrepo-ApiLambda:ExportsOutputFnGetAttDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CArn4B7B91D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:account-id:",
              {
                "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaRestApigithubrepoApiGatewayproxyANYApiPermissionbackendm47githubrepoapigatewayproductionstackLambdaRestApigithubrepoApiGateway184D4E3BANYproxy33D1990D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::ImportValue": "githubrepo-ApiLambda:ExportsOutputFnGetAttDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CArn4B7B91D4",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-west-1:account-id:",
              {
                "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
              },
              "/",
              {
                "Ref": "LambdaRestApigithubrepoApiGatewayDeploymentStageprodD02D8C0D",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaRestApigithubrepoApiGatewayproxyOPTIONS911D8093": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Cache-Control,Content-Language,Content-Type,Expires,Last-Modified,Pragma,Acceptencoding,Authorization,X-Amz-Date,X-Api-Key,X-Forwarded-For'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayproxy16F6DC02",
        },
        "RestApiId": {
          "Ref": "LambdaRestApigithubrepoApiGatewayD89FA79D",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`Test Stack Should_CreateCoreBackendStack_When_BuildIsCalled: backend_githubrepo-ApiLambda 1`] = `
{
  "Outputs": {
    "ExportsOutputFnGetAttDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CArn4B7B91D4": {
      "Export": {
        "Name": "githubrepo-ApiLambda:ExportsOutputFnGetAttDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CArn4B7B91D4",
      },
      "Value": {
        "Fn::GetAtt": [
          "DockerImageFunctionm47githubrepoapilambdaproductionstack4C53797C",
          "Arn",
        ],
      },
    },
    "ExportsOutputRefDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CA42F3C38": {
      "Export": {
        "Name": "githubrepo-ApiLambda:ExportsOutputRefDockerImageFunctionm47githubrepoapilambdaproductionstack4C53797CA42F3C38",
      },
      "Value": {
        "Ref": "DockerImageFunctionm47githubrepoapilambdaproductionstack4C53797C",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "DockerImageFunctionm47githubrepoapilambdaproductionstack4C53797C": {
      "DependsOn": [
        "LambdaRoleDefaultPolicy75625A82",
        "LambdaRole3A44B857",
      ],
      "Properties": {
        "Code": {
          "ImageUri": undefined,
        },
        "Environment": {
          "Variables": {
            "ASPNETCORE_ENVIRONMENT": "Production",
          },
        },
        "FunctionName": "githubrepo-api-production",
        "MemorySize": 1024,
        "PackageType": "Image",
        "Role": {
          "Fn::GetAtt": [
            "LambdaRole3A44B857",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Production",
          },
          {
            "Key": "Project",
            "Value": "githubrepo",
          },
          {
            "Key": "StackId",
            "Value": "m47-githubrepo-apilambda-production-stack",
          },
        ],
        "Timeout": 29,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "SecurityGroupm47githubrepoapilambdaproductionstack6DE56BDA",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Fn::ImportValue": "backend:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271",
            },
            {
              "Fn::ImportValue": "backend:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE",
            },
            {
              "Fn::ImportValue": "backend:ExportsOutputRefvpcPrivateSubnet3Subnet985AC459F9514491",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaRole3A44B857": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "Rolegithubrepo-apiProduction",
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaRoleDefaultPolicy75625A82": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "lambda:InvokeFunction",
                "lambda:InvokeAsync",
                "rds-data:*",
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "logs:CreateLogGroup",
                "logs:DescribeLogGroups",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "ds:CreateComputer",
                "ds:DescribeDirectories",
                "ssm:GetParameter",
                "ssm:GetParameters",
                "ssm:GetParameterHistory",
                "ssm:GetParametersByPath",
                "sqs:ReceiveMessage",
                "sqs:DeleteMessage",
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
                "sqs:ListQueues",
                "sns:Publish",
                "cloudformation:DescribeStacks",
                "cloudformation:ListStackResources",
                "cloudwatch:ListMetrics",
                "cloudwatch:GetMetricData",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcs",
                "kms:ListAliases",
                "iam:GetPolicy",
                "iam:GetPolicyVersion",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:ListAttachedRolePolicies",
                "iam:ListRolePolicies",
                "iam:ListRoles",
                "lambda:*",
                "states:DescribeStateMachine",
                "states:ListStateMachines",
                "tag:GetResources",
                "xray:GetTraceSummaries",
                "xray:BatchGetTraces",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "iam:PassRole",
              "Condition": {
                "StringEquals": {
                  "iam:PassedToService": "lambda.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:DescribeLogStreams",
                "logs:GetLogEvents",
                "logs:FilterLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
                "secretsmanager:TagResource",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:secretsmanager:*:*:secret:rds-db-credentials/*",
            },
            {
              "Action": [
                "s3:*",
                "s3-object-lambda:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaRoleDefaultPolicy75625A82",
        "Roles": [
          {
            "Ref": "LambdaRole3A44B857",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SecurityGroupm47githubrepoapilambdaproductionstack6DE56BDA": {
      "Properties": {
        "GroupDescription": "m47-githubrepo-apilambda-production-stack-SecurityGroup2",
        "GroupName": "m47-githubrepo-apilambda-production-stack-SecurityGroup2",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTPS outbound",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTP outbound",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
          {
            "CidrIp": {
              "Fn::ImportValue": "backend:ExportsOutputFnGetAttvpcA2121C38CidrBlock8A3D0BD6",
            },
            "Description": "Allow PostgreSQL inbound from VPC",
            "FromPort": 5432,
            "IpProtocol": "tcp",
            "ToPort": 5432,
          },
          {
            "CidrIp": "10.0.0.0/16",
            "Description": "Allow PostgreSQL inbound from legacy VPC",
            "FromPort": 5432,
            "IpProtocol": "tcp",
            "ToPort": 5432,
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "backend:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`Test Stack Should_CreateCoreBackendStack_When_BuildIsCalled: backend_githubrepo-S3BucketDatasets 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "S3Bucket07682993": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": "githubrepo-datasets",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*",
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "HEAD",
              ],
              "AllowedOrigins": [
                "*",
              ],
            },
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "S3BucketPolicyF560589A": {
      "Properties": {
        "Bucket": {
          "Ref": "S3Bucket07682993",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "S3Bucket07682993",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "S3Bucket07682993",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
